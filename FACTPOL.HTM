<!doctype html>
<html lang="es">
<head>
<meta charset="utf-8">
<meta name="Author" content="Dario Alejandro Alpern" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content="Aplicación Javascript que factoriza y halla raíces exactas de polinomios enteros y factoriza polinomios módulo una potencia de número primo. Escrito por Dario Alpern." />
<meta name="theme-color" content="#db5945">
<link rel="alternate" hreflang="en" href="FACTPOL.HTM" />
<link rel="manifest" href="factpol.webmanifest">
<link rel="apple-touch-icon" href="polfact-icon-180px.png">
<title>Calculadora de factorización de polinomios</title>
<style media="print">
#smallheader {display:none;}
</style>
<style media="screen">
#smallheader {background-color:#000080; width:100%; margin:0px; text-align:center;}
#smallheader ul { padding:0; margin:0 auto; list-style:none; display:inline-block;}
#smallheader li { float:left; position:relative; display:block; margin-top:0px; margin-bottom:0px; margin-left:5px; margin-right:5px; background-color:#000080; color:#FFFFFF; font-family:"Arial", sans-serif; cursor: pointer; text-align:left;}
#smallheader li:hover {background-color:#004000; color:#FFFFFF;}
#smallheader li ul { display:none; position:absolute; }
#smallheader li:hover ul.alignleft{ display:block; height:auto;}
#smallheader li:hover ul.alignright{ display:block; height:auto; right:0px; background-color:#004000;}
#smallheader li ul li{ clear:both; white-space: nowrap; border:0px; background-color:#004000; width:100%; padding-top:1em; padding-bottom:0.5em}
#smallheader a:link{color:#FFFFFF; text-decoration: none;}
#smallheader a:visited{color:#FFFFFF; text-decoration: none;}
#smallheader a:hover{background-color:#004000; color:#FFFFFF; text-decoration: none;}
#smallheader a:active{background-color:#004000; color:#FFFFFF; text-decoration: none;}
#smallheader li ul li a:link{background-color:#004000; color:#FFFFFF; display:block; width:100%;}
#smallheader li ul li a:visited{background-color:#004000;color:#FFFFFF; display:block; width:100%;}
#smallheader li ul li a:hover{background-color:#FFFFFF; color:#004000; display:block; width:100%;}
#smallheader li ul li a:active{background-color:#FFFFFF; color:#004000; display:block; width:100%;}
#result ul {margin:0;padding:0px 20px 0px 20px;}
@media (max-width: 400px) { #smallheader { font-size:0.7em;  } }
@media (min-width: 400px) { #smallheader { font-size:1em;  } }
@media (min-width: 500px) {#formleft {float:left;width:50%;} #formright {float:right;width:50%;}}
</style>
<style>
h2 > button {background-color:#eee; color:#444; cursor:pointer; padding:18px; font-weight:bold; font-size: 100%; width:100%; text-align:left; border:none; outline:none; transition:0.4s;}
h2 > button.active,h2 > button:hover {background-color:#ccc;}
h2 > button:after {content:"\002B"; color:#777; font-weight:bold; float:right; margin-left:5px;}
h2 > button.active:after {content:"\2212";}
.panel {padding: 0 10px; background-color:white; display:none; overflow:hidden;}
body {font-family: arial; margin: 0; padding: 0;}
h1 {text-align:center;}
fieldset {display:inline}
.lf,.labels {padding:0.2em; clear:both; width:100%}
.pad {padding:10px;}
.applet {margin-left: auto;margin-right: auto; border: 0px none;width:90%;text-align:center;background-color:#c0c0c0;padding:10px;}
#feedback {display:none}
.inputfbck{width: calc(100% - 10em);float:right;padding:3px;margin:0px;}
.input{width: calc(100% - 3em);float:right;padding:3px;margin:0px;}
.root{display: inline-block; vertical-align:middle; border-top: 1px solid; border-left: 1px solid; transform: skew(-15deg); transform-origin: bottom left; margin: 2px 10px; position: relative;}
.root:before {content: ""; position:absolute; bottom:0; height:40%; width:5px; left:-5px; border-right:1px solid; transform:skew(30deg); transform-origin:bottom right;}
.radicand2, .radicand3, .radicand4, .radicand5{display: inline-block; padding-left:0.5em; transform:skew(15deg);}
.radicand3:before{content: "3"; position:absolute; font-size:80%; top:-0.2em; left:-0.7em;}
.radicand4:before{content: "4"; position:absolute; font-size:80%; top:-0.2em; left:-0.7em;}
.radicand5:before{content: "5"; position:absolute; font-size:80%; top:-0.2em; left:-0.7em;}
.fraction{display: inline-flex; flex-direction:column; padding:0.3em; align-items:center; vertical-align:middle;}
.numerator {border-bottom: 2px solid grey; margin:-1px;}
.denominator {border-top: 2px solid grey; margin:-1px;}
.paren{padding-left:8px; padding-right:8px; position:relative; display:inline-block;}
.paren:before{border-left:2px solid black; border-radius:50%; bottom:0; content:''; position:absolute; top:0; width:8px; left:-3px;}
.paren:after{border-right:2px solid black; border-radius:50%; bottom:0; content:''; position:absolute; top:0; width:8px; right:3px;}
@media (min-width: 400px) { .input{width: calc(100% - 8em);float:right;padding:3px;margin:0px;}}
@media (max-width: 400px) { .input{width:100%;padding:3px;margin:0px;}}
</style>
<script type="text/galite">
<!--
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.galite=e():t.galite=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";function r(t,e){a[t]=e}function i(t){return a[t]}e.a=r,e.b=i;var a={}},function(t,e,n){"use strict";function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(){return(new Date).getTime()}function a(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(1===e.length&&e[0].constructor===Object)return e[0];switch(t){case"pageview":return{page:f(e,1)[0]};case"event":var n=f(e,4);return{eventCategory:n[0],eventAction:n[1],eventLabel:n[2],eventValue:n[3]};case"social":var r=f(e,3);return{socialNetwork:r[0],socialAction:r[1],socialTarget:r[2]};case"timing":var i=f(e,4);return{timingCategory:i[0],timingVar:i[1],timingValue:i[2],timingLabel:i[3]};default:return{}}}n.d(e,"a",function(){return d});var o=n(6),c=n(7),u=n(8),f=function(){function t(t,e){var n=[],r=!0,i=!1,a=void 0;try{for(var o,c=t[Symbol.iterator]();!(r=(o=c.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(t){i=!0,a=t}finally{try{!r&&c.return&&c.return()}finally{if(i)throw a}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},l=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),d="t0",p=function(){function t(e){r(this,t),this.fields={trackingId:e},this.userId=Object(c.a)(),this._sendTo=o.a,this._getTime=i}return l(t,[{key:"send",value:function(t){for(var e=arguments.length,n=Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];var i=s({hitType:t},a(t,n),this.fields),o=Object(u.a)(this.fields.trackingId,this._getTime(),this.userId,i);this._sendTo(o)}},{key:"get",value:function(t){return this.fields[t]}},{key:"set",value:function(t,e){this.fields[t]=e}}]),t}();e.b=p},function(t,e,n){"use strict";function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function i(t){if(!Object(o.a)()){for(var e=a(t),n=d(e,2),r=n[0],i=n[1],s=!!c.a[t],l=!!f.b.prototype[i]&&"constructor"!==i,p=arguments.length,v=Array(p>1?p-1:0),g=1;g<p;g++)v[g-1]=arguments[g];if(s)c.a[t].apply(c.a,v);else if(l){var y=Object(u.b)(r);y[i].apply(y,v)}else{if("function"!=typeof t)throw new Error("Command "+t+" is not available in ga-lite");var b=Object(u.b)(r);t(b)}}}function a(t){return"string"==typeof t&&t.indexOf(".")>-1?t.split("."):[f.a,t]}Object.defineProperty(e,"__esModule",{value:!0}),e.default=i;var o=n(3),c=n(4),u=n(0),f=n(1),s=n(14),l=n(15),d=(n.n(l),function(){function t(t,e){var n=[],r=!0,i=!1,a=void 0;try{for(var o,c=t[Symbol.iterator]();!(r=(o=c.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(t){i=!0,a=t}finally{try{!r&&c.return&&c.return()}finally{if(i)throw a}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}());Object.keys(c.a).forEach(function(t){i[t]=c.a[t]}),Object(s.a)().forEach(function(t){return i.apply(void 0,r(t))})},function(t,e,n){"use strict";function r(){return 1===parseInt(navigator.msDoNotTrack||window.doNotTrack||navigator.doNotTrack,10)}e.a=r},function(t,e,n){"use strict";var r=n(5),i=n(13),a={create:r.a,getByName:i.a};e.a=a},function(t,e,n){"use strict";function r(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.a,r=(arguments[3],new a.b(t));return Object(i.a)(n,r),r}e.a=r;var i=n(0),a=n(1)},function(t,e,n){"use strict";function r(t){if("undefined"!=typeof navigator&&navigator.sendBeacon){if(navigator.sendBeacon(t))return}try{var e=new window.XMLHttpRequest;e.open("GET",t,!1),e.send()}catch(e){var n=new window.Image;n.src=t}}e.a=r},function(t,e,n){"use strict";function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window?window.localStorage:null;if(t&&t.getItem(i))return t.getItem(i);var e=Math.random()+"."+Math.random();return t&&t.setItem(i,e),e}e.a=r;var i="uid"},function(t,e,n){"use strict";function r(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},c=arguments.length>4&&void 0!==arguments[4]&&arguments[4],u=Object(a.a)(Object(o.a)(r));return Object(i.a)()+(u?"&"+u:"")+(c?"&aip=1":"")+"&cid="+n+"&tid="+t+"&z="+e}e.a=r;var i=n(9),a=n(11),o=n(12)},function(t,e,n){"use strict";function r(t,e){return"https://www.google-analytics.com/collect?v=1&ul=en-us&de=UTF-8"+Object(i.a)("dl",[document.location.href])+Object(i.a)("dt",[document.title])+Object(i.a)("sd",[window.screen.colorDepth,"-bit"])+Object(i.a)("sr",[window.screen.availHeight,"x",window.screen.availWidth])+Object(i.a)("vp",[window.innerWidth,"x",window.innerHeight])+Object(i.a)("dr",[document.referrer])}e.a=r;var i=n(10)},function(t,e,n){"use strict";function r(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return!t||e.indexOf(void 0)>-1?"":"&"+t+"="+e.map(encodeURIComponent).join("")}e.a=r},function(t,e,n){"use strict";function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(t).map(function(e){return[e,t[e]].map(i).map(encodeURIComponent).join("=")}).join("&")}function i(t){return"boolean"==typeof t?+t:t}e.a=r},function(t,e,n){"use strict";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t){return Object.keys(t).filter(function(t){return o.hasOwnProperty(t)}).filter(function(e){return t[e]}).reduce(function(e,n){return a({},e,r({},o[n],t[n]))},{})}e.a=i;var a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},o={anonymizeIp:"aip",dataSource:"ds",queueTime:"qt",userId:"uid",sessionControl:"sc",referrer:"dr",campaignName:"cn",campaignSource:"cs",campaignMedium:"cm",campaignKeyword:"ck",campaignContent:"cc",campaignId:"ci",screenResolution:"sr",viewportSize:"vp",encoding:"de",screenColors:"sd",language:"ul",javaEnabled:"je",flashVersion:"fl",hitType:"t",nonInteraction:"ni",location:"dl",hostname:"dh",page:"dp",title:"dt",screenName:"cd",linkid:"linkid",appName:"an",appId:"aid",appVersion:"av",appInstallerId:"aiid",eventCategory:"ec",eventAction:"ea",eventLabel:"el",eventValue:"ev",currencyCode:"cu",socialNetwork:"sn",socialAction:"sa",socialTarget:"st",timingCategory:"utc",timingVar:"utv",timingValue:"utt",timingLabel:"utl",exDescription:"exd",exFatal:"exf",expId:"xid",expVar:"xvar"}},function(t,e,n){"use strict";function r(t){return Object(i.b)(t)}e.a=r;var i=n(0)},function(t,e,n){"use strict";function r(){return"undefined"==typeof window?[]:window.galite&&window.galite.q||[]}e.a=r},function(t,e){Array.from=Array.from||function(){var t;return(t=Array.prototype.slice).call.apply(t,arguments)}}]).default});
//-->
</script>
<script>
var blob = new Blob(Array.prototype.map.call(document.querySelectorAll('script[type=\'text\/galite\']'), function (oScript) { return oScript.textContent; }),{type: 'text/javascript'});
(function(e,t,n,i,s,a,c){e[n]=e[n]||function(){(e[n].q=e[n].q||[]).push(arguments)}
;a=t.createElement(i);c=t.getElementsByTagName(i)[0];a.async=true;a.src=s
;c.parentNode.insertBefore(a,c)
})(window,document,"galite","script",window.URL.createObjectURL(blob));
galite('create', 'UA-4438475-1', 'auto');
galite('send', 'pageview');
</script>
</head>
<body>
<nav id="smallheader">
<div style="padding:0px;float:right;">
<a href="ENGLISH.HTM" hreflang="en" title="Dario Alpern's Web site in English">ENG</a>
</div>
<ul>
<li>
Electrónica
<ul class="alignleft">
<li>
<a href="INTEL.HTM" title="Todos los microprocesadores de Intel desde el 4004 al Pentium">Microprocesadores Intel</a>
</li>
</ul>
</li>
<li>
Matemáticas
<ul class="alignleft">
<li>
<a href="CALDORAS.HTM" title="Aplicaciones HTML5 que implementan calculadoras">Calculadoras</a>
</li>
<li>
<a href="TNUMEROS.HTM" title="Artículos y programas sobre teoría de números">Teoría de números</a>
</li>
<li>
<a href="PROBLEMAS.HTM" title="Problemas matemáticos interesantes">Problemas</a>
</li>
</ul>
</li>
<li>
Programas
<ul class="alignright">
<li>
<a href="ENSAM386.HTM" title="Programas escritos en lenguaje ensamblador del 80386">Assembler 80386</a>
</li>
<li>
<a href="PROGJAVA.HTM" title="Aplicaciones HTML5 con JavaScript y WebAssembly">Aplicaciones HTML5</a>
</li>
<li>
<a href="JUEGOS.HTM" title="Juegos en línea y para descargar">Juegos</a>
</li>
</ul>
</li>
<li class="alignright">
Contacto
<ul class="alignright">
<li>
<a href="PERSONAL.HTM" title="Información personal">Personal</a>
</li>
<li>
<a href="FORMULAR.HTM" title="Formulario para enviar comentarios">Comentarios</a>
</li>
<li>
<a href="GBOOK.HTM" title="Viejo y nuevo libro de visitas">Libro de invitados</a>
</li>
<li>
<a href="DONATION.HTM" title="Donaciones al autor de este sitio Web">Donaciones</a>
</li>
</ul>
</li>
</ul>
<br style="clear:both;" />
</nav>
<main id="main">
<article>
<h1>Calculadora de factorización de polinomios</h1>
<div class="pad">
<div id="a" itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb" itemref="b" style="display:inline;">
<a href="/" itemprop="url">
<span itemprop="title">Alpertron</span>
</a> ›
</div>
<div id="b" itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" itemref="c" style="display:inline;">
<a href="PROGJAVA.HTM" itemprop="url">
<span itemprop="title">Programas</span>
</a> ›
</div>
<div id="c" itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb" itemprop="child" style="display:inline;">
<a href="FACTPOL.HTM" itemprop="url">
<span itemprop="title">Calculadora de factorización de polinomios</span>
</a>
</div>
</div>
<form class="applet">
<label for="poly">Polinomio</label><input type="text" id="poly" value="" class="input" autocomplete="off" autocapitalize="off" spellcheck="false" />
<div class="lf"></div>
<label for="mod">Módulo</label><input type="text" id="mod" value="0" class="input"/>
<div class="lf"></div>
<input type="button" id="eval" value="Evaluar" />
<input type="button" id="factor" value="Factorizar" />
<input type="button" id="stop" value="Parar" />
<input type="button" id="helpbtn" value="Ayuda" /><br />
<div class="lf"></div>
<label for="digits">Dígitos por grupo</label> <input type="number" id="digits" value="6"/>
<input type="checkbox" id="sup" value="sup" checked /> <label for="sup">Impresión bonita</label>
</form>
<div id="help" aria-live="polite" class="pad">
<p>Esta aplicación Javascript puede evaluar y factorizar expresiones polinómicas módulo un primo o una potencia de número primo.
También puede evaluar, factorizar y hallar raíces exactas de polinomios enteros ingresando el valor cero en la caja de entrada Módulo.</p>
<p>Puedes ingresar polinomios rápidamente usando la <em>notación punto</em>. Por ejemplo, para entrar 2<var>x</var><sup>4</sup> + 3<var>x</var><sup>2</sup> + 1, puedes escribir: 2.4 + 3.2 + 1</p>
<h2><button>Polinomios enteros</button></h2>
<div class="panel">
<p>Los polinomios enteros en una variable son expresiones que incluyen una variable llamada <var>x</var>, números enteros y las operaciones de suma, resta y multiplicación.</p>
<p>Se pueden expresar mediante la forma: <var>f</var>(<var>x</var>) = <var>f</var><sub>0</sub> + <var>f</var><sub>1</sub>&#8290;<var>x</var> + <var>f</var><sub>2</sub>&#8290;<var>x</var><sup>2</sup> + ... + <var>f</var><sub>n</sub>&#8290;<var>x</var><sup>n</sup>.</p>
<p>El número <var>n</var> es el grado del polinomio. El coeficiente <var>f</var><sub>n</sub> es el coeficiente principal y el coeficiente <var>f</var><sub>0</sub> es el término independiente.
Se pueden escribir como grado(<var>f</var>), cp(<var>f</var>) y ti(<var>f</var>) respectivamente.</p>
<p>Sean <var>f</var>(<var>x</var>) y <var>g</var>(<var>x</var>) dos polinomios tales que grado(<var>f</var>) &ge; grado(<var>g</var>). Podemos definir la suma, resta y multiplicación como sigue:</p>
<p><var>f</var>(<var>x</var>) + <var>g</var>(<var>x</var>) = <var>h</var>(<var>x</var>) significa <var>h</var><sub><var>i</var></sub> = <var>f</var><sub><var>i</var></sub> + <var>g</var><sub><var>i</var></sub> si <var>i</var> &le; grado(<var>g</var>) y <var>h</var><sub><var>i</var></sub> = <var>f</var><sub>i</sub> en caso contrario.</p>
<p><var>f</var>(<var>x</var>) &minus; <var>g</var>(<var>x</var>) = <var>h</var>(<var>x</var>) significa <var>h</var><sub><var>i</var></sub> = <var>f</var><sub><var>i</var></sub> &minus; <var>g</var><sub><var>i</var></sub> si <var>i</var> &le; grado(<var>g</var>) y <var>h</var><sub><var>i</var></sub> = <var>f</var><sub>i</sub> en caso contrario.</p>
<p><var>g</var>(<var>x</var>) &minus; <var>f</var>(<var>x</var>) = <var>h</var>(<var>x</var>) significa <var>h</var><sub><var>i</var></sub> = <var>g</var><sub><var>i</var></sub> &minus; <var>f</var><sub><var>i</var></sub> si <var>i</var> &le; grado(<var>g</var>) y <var>h</var><sub><var>i</var></sub> = &minus;<var>f</var><sub>i</sub> en caso contrario.</p>
<p><var>f</var>(<var>x</var>) &#8290; <var>g</var>(<var>x</var>) = <var>h</var>(<var>x</var>) significa
<var>h</var><sub><var>i</var></sub> = <var>f</var><sub>0</sub> &#8290; <var>g</var><sub><var>i</var></sub> + <var>f</var><sub>1</sub> &#8290; <var>g</var><sub><var>i</var> &minus; 1</sub> + ... + <var>f</var><sub>i</sub> &#8290; <var>g</var><sub>0</sub> si <var>i</var> &le; grado(<var>g</var>),
<var>h</var><sub><var>i</var></sub> = <var>f</var><sub><var>i</var> &minus; grado(<var>g</var>)</sub> &#8290; <var>g</var><sub>grado(<var>g</var>)</sub> + <var>f</var><sub><var>i</var> + 1 &minus; grado(<var>g</var>)</sub> &#8290; <var>g</var><sub>grado(<var>g</var>) &minus; 1</sub> + ... + <var>f</var><sub>i</sub> &#8290; <var>g</var><sub>0</sub> en caso contrario.</p>
<p>La factorización de polinomios enteros es el proceso que encuentra uno o más polinomios irreducibles cuyo producto es el polinomio original. Un polinomio irreducible no se puede expresar como un producto de dos o más polinomios enteros.
<p>Ejemplo: <var>x</var><sup>4</sup> &minus; 1 = (<var>x</var><sup>2</sup> + 1) &#8290; (<var>x</var> + 1) &#8290; (<var>x</var> &minus; 1)</p>
<p>Se puede demostrar que cualquier polinomio entero se puede factorizar de una sola manera en polinomios irreducibles.</p>
</div>
<h2><button>Polinomios módulo un número primo</button></h2>
<div class="panel">
<p>La multiplicación de polinomios módulo un número primo se puede realizar de la manera habitual multiplicando los diferentes términos del polinomio
y luego sumando los coeficientes del mismo grado. Finalmente se reducen los coeficientes módulo ese primo.</p>
<p>Por ejemplo, el producto de 3x<sup>2</sup> + 5x + 1 y 6x<sup>2</sup> + 4x + 3 módulo 7 es 18x<sup>4</sup> + (30+12)x<sup>3</sup> + (9+20+6)x<sup>2</sup> + (15+4)x + 3 módulo 7 que es igual a 4x<sup>4</sup> + 5x + 3</p>
<p>Se puede demostrar que cualquier polinomio módulo un número primo se puede factorizar como el primer coeficiente y polinomios mónicos de una sola manera (los polinomios mónicos son aquellos que tienen el primer coeficiente igual a 1.)</p>
<p>También se puede demostrar que si no hay factores repetidos, el polinomio se puede factorizar módulo una potencia de ese primo de una sola forma.</p>
</div>
<h2><button>Uso del programa</button></h2>
<div class="panel">
<p>Utilice la caja superior para ingresar el polinomio y la inferior para ingresar el módulo,
que debe ser un número entero mayor que 1 que sea un número primo o un primo elevado a alguna potencia.
Es posible simplemente evaluar el polinomio, o bien evaluarlo y factorizarlo, apretando el botón correspondiente.</p>
<p>Ejemplo para polinomio entero: para factorizar x<sup>30</sup> &minus; 1, ingrese x^30-1 en la caja superior y cero en la inferior. Luego presione el botón Factorizar.</p>
<p>Ejemplo para polinomio módulo primo: copie cualquiera de las expresiones que figura abajo en la caja de texto superior y escriba el número 211 (un número primo) en la caja de texto inferior.
Luego apriete el botón denominado "Factorizar".</p>
<ul>
<li>6x^8+x^5+3</li>
<li>2*((x+6)*(x-5)+xx)^4+23x</li>
</ul>
<p>Algunos dispositivos móviles no permiten ingresar el símbolo de exponenciación. En este caso se puede escribir dos asteriscos ** para el operador de exponenciación.
De esta manera, las siguientes expresiones son equivalentes:</p>
<ul>
<li>6x**8+x**5+3</li>
<li>2*((x+6)*(x-5)+xx)**4+23x</li>
</ul>
<p>Escribiendo un punto (.), la aplicación lo reemplazará por "x^". Esto reduce notablemente el tiempo de ingreso de expresiones polinómicas en dispositivos móviles
porque no hay necesidad de cambiar de teclado numérico a alfabético y viceversa para escribir polinomios sencillos.</p>
<p>Para el primer ejemplo sería:</p>
<ul><li>6.8+.5+3</li></ul>
<p>La factorización de polinomios de grados muy elevados requiere mucho tiempo.
Debido a esto, la aplicación acepta polinomios de grado no superior a 1000.
<p>La opción <em>Impresión bonita</em> se utiliza para ver los exponentes como superíndices (cuando la opción está marcada)
o precedida por el símbolo de intercalación (^) (cuando la opción no está marcada). También permite ver las raíces con el formato tradicional.
La primera opción sirve para ver la factorización en pantalla o para imprimirla.
La segunda opción se utiliza cuando hay que copiar los datos a otra aplicación.
<p>Cuando la caja <em>Módulo</em> vale cero, la aplicación muestra las raíces del polinomio mediante números racionales y radicaciones. El programa soporta grados de los factores hasta 5.
Por el teorema de Abel y Ruffini, algunos polinomios de grado 5 no se pueden expresar mediante radicandos.</p>
</div>
<h2><button>Expresiones</button></h2>
<div class="panel">
<p>Se pueden ingresar expresiones que usan los siguientes operadores y paréntesis:</p>
<ul>
<li><strong>+</strong> para suma</li>
<li><strong>-</strong> para resta</li>
<li><strong>*</strong> para multiplicación</li>
<li><strong>/</strong> para división entera</li>
<li><strong>%</strong> para resto</li>
<li><strong>^</strong> o <strong>**</strong> para exponenciación</li>
</ul>
<p>Para el módulo se pueden usar los operadores indicados arriba y además:</p>
<ul>
<li><strong>n!</strong>: factorial</li>
<li><strong>p#</strong>: primorial (producto de todos los primos menores o iguales a <em>p</em>).</li>
<li><strong>B(n)</strong>: número probablemente primo anterior a <em>n</em></li>
<li><strong>F(n)</strong>: número de Fibonacci F<SUB>n</SUB></li>
<li><strong>L(n)</strong>: número de Lucas L<SUB>n</SUB> = F<SUB>n-1</SUB> + F<SUB>n+1</SUB></li>
<li><strong>N(n)</strong>: número probablemente primo posterior a <em>n</em></li>
<li><strong>P(n)</strong>: particiones irrestrictas (cantidad de descomposiciones de <em>n</em> en sumas de números enteros sin tener en cuenta el orden).</li>
<li><strong>Gcd(m,n)</strong>: Máximo común divisor de estos dos números enteros o polinomios.</li>
<li><strong>Der(m)</strong>: Derivada del polinomio.</li>
<li><strong>Modinv(m,n)</strong>: inverso de <var>m</var> modulo <var>n</var>, sólo válido cuando gcd(m,n)=1.</li>
<li><strong>Modpow(m,n,r)</strong>: halla <var>m</var><sup><var>n</var></sup> módulo <var>r</var>.</li>
</ul>
<p>Puedes usar el prefijo <em>0x</em> para números hexadecimales, por ejemplo 0x38 es igual a 56.</p>
</div>
<h2><button>División de polinomios</button></h2>
<div class="panel">
<h3>Polinomios módulo un número primo</h3>
<p>La división de polinomios requiere varias divisiones modulares donde el divisor es el coeficiente principal del polinomio divisor.</p>
<p>Para calcular la división modular <var>a</var> / <var>b</var> (mod <var>p</var>), primero debemos hallar el inverso multiplicativo modular <var>c</var>.
Este número tiene la propiedad <var>b</var>&#8290;<var>c</var> &equiv; 1 (mod <var>p</var>) y se puede hallar usando el algoritmo extendido de Euclides como se muestra a continuación:</p>
<p><code>
función modInv(value, modulus)<br>
{<br>
&nbsp;&nbsp;V1 &larr; 1; V3 &larr; value;<br>
&nbsp;&nbsp;U1 &larr; 0; U3 &larr; modulus;<br>
&nbsp;&nbsp;mientras V3 &ne; 0<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;QQ &larr; U3 / V3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;T1 &larr; U1 &minus; V1 * QQ;<br>
&nbsp;&nbsp;&nbsp;&nbsp;T3 &larr; U3 &minus; V3 * QQ;<br>
&nbsp;&nbsp;&nbsp;&nbsp;U1 &larr; V1; U3 &larr; V3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;V1 &larr; T1; V3 &larr; T3;<br>
&nbsp;&nbsp;}<br>
&nbsp;&nbsp;retornar U1;<br>
}
</code></p>
<p>la división es igual al producto <var>a</var>&#8290;<var>c</var> (mod <var>p</var>).</p>
<p>Para minimizar la cantidad de divisiones modulares (que tardan mucho tiempo), podemos multiplicar todos los coeficientes de ambos polinomios (dividendo y divisor) por el inverso multiplicativo del coeficiente principal del polinomio divisor.
De esta manera, dividiremos por un polinomio mónico, esto es, un polinomio cuyo término principal vale 1. Esto no cambiará el cociente, pero deberemos multiplicar el resto por el coeficiente principal del polinomio divisor.
<p>Ejejmplo: realizar la división (3&#8290;<var>x</var><sup>3</sup> + 7&#8290;<var>x</var><sup>2</sup> + 5&#8290;<var>x</var> + 6) / (4&#8290;<var>x</var><sup>2</sup> + 3&#8290;<var>x</var> + 10) (mod 11):</p>
<p>Primero debemos hallar el inverso multiplicativo de 4 (mod 11), que es igual a 3, porque 4 &times; 3 = 12 &equiv; 1 (mod 11). Multiplicando todos los coeficientes por 3 obtenemos:</p>
<p>(9&#8290;<var>x</var><sup>3</sup> + 10&#8290;<var>x</var><sup>2</sup> + 4&#8290;<var>x</var> + 7) / (<var>x</var><sup>2</sup> + 9&#8290;<var>x</var> + 8) (mod 11)</p>
<p>Dividiendo el coeficiente principal del polinomio dividendo por el coeficiente principal del polinomio divisor: 9&#8290;<var>x</var><sup>3</sup> / <var>x</var><sup>2</sup> &equiv; 9&#8290;<var>x</var> (mod 11).</p>
<p>Ahora restamos el producto de lo que acabamos de hallar por el polinomio divisor del polinomio dividendo. Obtenemos:</p>
<p>9&#8290;<var>x</var><sup>3</sup> + 10&#8290;<var>x</var><sup>2</sup> + 4&#8290;<var>x</var> + 7 - 9&#8290;<var>x</var>(<var>x</var><sup>2</sup> + 9&#8290;<var>x</var> + 8) &equiv; 6&#8290;<var>x</var><sup>2</sup> + 9&#8290;<var>x</var> + 7 (mod 11). Debemos observar que 10 &minus; 9 &times; 9 &equiv; 6 (mod 11) y 4 &minus; 9 &times; 8 (mod 11) &equiv; 9 (mod 11).</p>
<p>Dividiendo el coeficiente principal del polinomio resto que acabamos de hallar por el coeficiente principal del polinomio divisor: 6&#8290;<var>x</var><sup>2</sup> / <var>x</var><sup>2</sup> &equiv; 6 (mod 11).</P>
<p>Ahora restamos el producto de lo que acabamos de hallar por el polinomio divisor del polinomio resto. Obtenemos:</p>
<p>(6&#8290;<var>x</var><sup>2</sup> + 9&#8290;<var>x</var> + 7) &minus; 6&#8290;(<var>x</var><sup>2</sup> + 9&#8290;<var>x</var> + 8) &equiv; 10<var>x</var> + 3 (mod 11). Debemos observar que 9 &minus; 6 &times; 9 &equiv; 10 (mod 11) y 7 &minus; 6 &times; 8 &equiv; 3 (mod 11).</p>
<p>El polinomio cociente es igual a 9&#8290;<var>x</var> + 6 y el polinomio resto es igual a 4&#8290;(10<var>x</var> + 3) &equiv; 7 <var>x</var> + 1 (mod 11).</p>
<p>
<h3>Polinomios enteros</h3>
<p>La división se realiza de la misma manera que en la subsección anterior, con la diferencia que no hay inverso multiplicativo del coeficiente principal del polinomio divisor. Así que por cada iteración del algoritmo, se necesita una división.
Si el polinomio divisor no es mónico, a veces no podremos hacer la división. Esto ocurre cuando el coeficiente principal del resto no es múltiplo del coeficiente principal del divisor.</p>
</div>
<h2><button>Máximo común divisor de polinomios</button></h2>
<div class="panel">
<p>El máximo común divisor de dos polinomios es el polinomio de mayor grado posible, que divide ambos polinomios.</p>
<p>Por ejemplo: mcd(<var>x</var><sup>2</sup> + 6&#8290;<var>x</var> + 5, 2&#8290;<var>x</var><sup>2</sup> + 13&#8290;<var>x</var> + 15) = <var>x</var> + 5</p>
<h3>Polinomios módulo un número primo</h3>
<p>El máximo común divisor se puede hallar mediante el algoritmo de Euclides como se muestra a continuación:</p>
<p><code>
función mcdm(pol1, pol2, p)<br>
{<br>
&nbsp;&nbsp;a &larr; pol1;<br>
&nbsp;&nbsp;b &larr; pol2;<br>
&nbsp;&nbsp;mientras b ≠ 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;t &larr; b;<br>
&nbsp;&nbsp;&nbsp;&nbsp;b &larr; resto(a, b) (mod p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;a &larr; t;<br>
&nbsp;&nbsp;retornar a;<br>
}<br>
</code></p>

<h3>Polinomios enteros</h3>
<p>Se puede utilizar el algoritmo recién mostrado para hallar el mcd de dos polinomios enteros, pero los coeficientes de los polinomios intermedios crecen rápidamente, así que no es útil.</p>
<p>Existen dos métodos eficientes para hallar el mcd: el algoritmo de subresultantes y el modular. El último, inventado por William Brown, utiliza mcd de polinomios módulo un número primo, así que es mejor para nosotros.</p>
<p><code>
función mcdp(pol1, pol2)<br>
{<br>
&nbsp;&nbsp;c<sub>1</sub> &larr; cont(pol1);<br>
&nbsp;&nbsp;c<sub>2</sub> &larr; cont(pol2);<br>
&nbsp;&nbsp;c &larr; mcd(c<sub>1</sub>, c<sub>2</sub>);<br>
&nbsp;&nbsp;a &larr; pol1 / c<sub>1</sub>;<br>
&nbsp;&nbsp;b &larr; pol2 / c<sub>2</sub>;<br>
&nbsp;&nbsp;h &larr; mcd(cp(pol1), cp(pol2));<br>
&nbsp;&nbsp;d &larr; min(grado(pol1), grado(pol2));<br>
&nbsp;&nbsp;m &larr; 1;<br>
&nbsp;&nbsp;g<sub>m</sub> &larr; 0;<br>
&nbsp;&nbsp;repetir<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;hacer<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hacer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p &larr; nextPrime();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} mientras resto(m*h, p) = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r &larr; pol1 (mod p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s &larr; pol2 (mod p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g<sub>p</sub> &larr; gcdm(r, s, p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si grado(g<sub>p</sub>) = 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salida c; salir;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;} mientras grado(g<sub>p</sub>) > d;<br>
&nbsp;&nbsp;&nbsp;&nbsp;g<sub>p</sub> &larr; (h mod p)/cp(g<sub>p</sub>) * g<sub>p</sub>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;si grado(g<sub>p</sub>) &lt; d<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m &larr; 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g<sub>m</sub> &larr; 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d &larr; grado(g<sub>p</sub>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;h &larr; ACR([g<sub>p</sub>, p], [g<sub>m</sub>, m]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;si h = g<sub>m</sub><br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h &larr; h / cont(h);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si resto(a, h) = 0 y resto(b, h) = 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salida c*h; salir;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;m &larr; p * m;<br>
&nbsp;&nbsp;&nbsp;&nbsp;g<sub>m</sub> &larr; h;<br>
&nbsp;&nbsp;}<br>
}
</code></p>
<p>El contenido de un polinomio es el máximo común divisor de todos los coeficientes de ese polinomio. Su signo coincide con el signo del coeficiente principal. Se expresa como cont(f) en el algoritmo que se acaba de mostrar.</p>
<p>Los coeficientes del resultado del algoritmo chino del resto (function ACR) calculado módulo <var>m</var><var>p</var>, deben estar en el rango &minus;<var>m</var><var>p</var>/2 a <var>m</var><var>p</var>/2.</p>
<p>En este algoritmo se calculan varios mcd de los polinomios de entrada módulo diferentes primos. Podemos observar que sus grados son mayores o iguales que el grado del polinomio mcd.</p>
<p>Podemos distinguir tres casos:</p>
<ul>
<li>El grado del mcd modular es mayor que el grado del mcd modular anterior: descartamos el nuevo resultado porque tiene el grado incorrecto.</li>
<li>El grado del mcd modular el menor que el grado del mcd modular anterior: descartamos el viejo resultado porque tiene el grado incorrecto. Lo reemplazamos por el nuevo resultado.</li>
<li>Ambos grados son iguales: Unimos los coeficientes de ambos mcd usando el algoritmo chino del resto. Este algoritmo halla <var>g</var> (mod <var>m</var><var>p</var>) dados <var>g</var><sub>m</sub> (mod <var>m</var>) y <var>g</var><sub>p</sub> (mod <var>p</var>).</li>
</ul>
<p>El algoritmo continúa hasta que el polinomio calculado divide los dos polinomios de entrada.</p>
</div>
<h2><button>Factorización de polinomios módulo un número primo</button></h2>
<div class="panel">
<p>El algoritmo de factorización se divide en cuatro etapas: factorization de factores repetidos, factorización de grados diferentes, factorización de grados iguales y elevación de los factores.
Todos los pasos requieren polinomios mónicos, así que antes de comenzar, debemos multiplicar todos los coeficientes por el inverso multiplicativo del coeficiente principal del polinomio.</p>
<h3>Factorization de factores repetidos</h3>
<p>Los siguientes etapas no funcionan si hay factores repetidos, así que el primer paso consiste en factorizar el polinomio de manera que no haya factores repetidos.</p>
<p>La derivada del polinomio <var>f</var>(<var>x</var>) = <var>f</var><sub>0</sub> + <var>f</var><sub>1</sub>&#8290;<var>x</var> + <var>f</var><sub>2</sub>&#8290;<var>x</var><sup>2</sup> + ... + <var>f</var><sub>n</sub>&#8290;<var>x</var><sup>n</sup> es
<var>f</var>'(<var>x</var>) = <var>f</var><sub>1</sub> + 2&#8290;<var>f</var><sub>2</sub>&#8290;<var>x</var> + ... + <var>n</var>&#8290;<var>f</var><sub>n</sub>&#8290;<var>x</var><sup>n &minus; 1</sup></p>
<p>El algoritmo recursivo es:</p>
<p><code>
función FFR(f)<br>
{<br>
&nbsp;&nbsp;i &larr; 1; g &larr; f';<br>
&nbsp;&nbsp;si g &ne; 0<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;c &larr; mcd(f, g);<br>
&nbsp;&nbsp;&nbsp;&nbsp;w &larr; f / c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;mientras w &ne; 1<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y &larr; mcd(w, c); z &larr; w / y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salida(z<sup>i</sup>); i &larr; i + 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w &larr; y; c &larr; c / y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;si c &ne; 1<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c &larr; c<sup>1/p</sup>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salida(SFF(c)<sup>p</sup>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;}<br>
&nbsp;&nbsp;else<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;f &larr; f<sup>1/p</sup>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Salida(SFF(f)<sup>p</sup>);<br>
&nbsp;&nbsp;}<br>
}
</code></p>
<p>Debemos hacer las siguientes etapas por cada polinomio en la salida de este algoritmo.</p>
<h3>Factorización de grados diferentes</h3>
<p>Este es un método que usa el hecho que el producto de todos los polinomios mónicos irreducibles de grados que dividen <var>d</var> (mod <var>p</var>) es igual a <var>x</var><sup>e</sup> &minus; <var>x</var> donde <var>e</var> = <var>p</var><sup><var>d</var>.</p>
<p><code>
función FGD(f, p)<br>
{<br>
&nbsp;&nbsp;i &larr; 1;<br>
&nbsp;&nbsp;h &larr; f;<br>
&nbsp;&nbsp;j &larr; x;<br>
&nbsp;&nbsp;q &larr; 0;<br>
&nbsp;&nbsp;mientras grado(h) &ge; 2&#8290;i<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;j &larr; j<sup>p</sup> (mod h);<br>
&nbsp;&nbsp;&nbsp;&nbsp;g &larr; gcdm(h, j &minus; x);<br>
&nbsp;&nbsp;&nbsp;&nbsp;si g &ne; 1<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salida(g, i);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q &larr; 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h &larr; h / g;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;}<br>
&nbsp;&nbsp;si h &ne; 1<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;Salida(h, grado(h));<br>
&nbsp;&nbsp;&nbsp;&nbsp;q &larr; 1;<br>
&nbsp;&nbsp;}<br>
&nbsp;&nbsp;si q = 0<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;Salida(f, 1);<br>
&nbsp;&nbsp;}<br>
}
</code></p>
<p>Los pares que forman la salida de esta función son la entrada de la siguiente etapa. El primer elemento del par es un factor de <var>f</var> que es el producto de todos los factores cuyo grado está especificado en el segundo elemento del par.</p>
<h3>Factorización de grados iguales</h3>
<p>Este es un método probabilístico inventado por David Cantor y Hans Zassenhaus que encuentra todos los factores del mismo grado de la salida del algoritmo anterior:</p>
<p><code>
función FGI(f, d, p)<br>
{<br>
&nbsp;&nbsp;n &larr; grado(f);<br>
&nbsp;&nbsp;Asignar f a la lista de factores;<br>
&nbsp;&nbsp;mientras tamaño(list of factors) &lt; n/d<br>
&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;h &larr; polinomio al azar con grado(h) &lt; n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;e &larr; (q<sup>d</sup> &minus; 1) / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;g &larr; h<sup>e</sup> &minus; 1 (mod f);<br>
&nbsp;&nbsp;&nbsp;&nbsp;por cada elemento u de la lista de factores<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si grado(u) &gt; d<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j &larr; mcdm(g, u);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si j &ne; 1 y j &ne; u<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;descartar u de la lista de factores;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;agregar j y u/j a la lista de factores;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;}<br>
&nbsp;&nbsp;Salida lista de factores<br>
}
</code></p>
<h3>Elevación de los factores</h3>
<p>Una vez que hallamos todos los factores irreducibles del polinomio módulo <var>p</var>, podemos calcular el factor del polinomio módulo <var>p</var><sup>n</sup> si no hay factores repetidos.
El siguiente algoritmo puede elevar de módulo <var>m</var> a <var>m</var><sup>2</sup>, así que podemos ejecutarlo varias veces hasta obtener el módulo deseado.</p>
<p>Entrada: f = g*h (mod m), s*g + t*h = 1 (mod m)</p>
<p>Salida: f = g'*h' (mod m<sup>2</sup>), s'*g' + t'*h' = 1 (mod m<sup>2</sup>) with grado(s') &lt; grado(h'), grado(t') &lt; grado(g')</p>
<p>Todos los cálculos que se muestran abajo se realizan mod m<sup>2</sup>.</p>
<p><code>
&nbsp;&nbsp;e &larr; f - g*h<br>
&nbsp;&nbsp;Calcular q, r tales que s*e = q*h + r<br>
&nbsp;&nbsp;g' &larr; g + t*e + q*g<br>
&nbsp;&nbsp;h' &larr; h + r<br>
<br>
&nbsp;&nbsp;e &larr; s*g' + t*h' &minus; 1<br>
&nbsp;&nbsp;Calcular q, r tales que s*e = q*h + r<br>
&nbsp;&nbsp;s' &larr; s &minus; r<br>
&nbsp;&nbsp;t' &larr; t &minus; t*e &minus; q*g'
</code></p>
<p>Los valores iniciales de <var>s</var> y <var>t</var> se obtienen de <var>g</var> y <var>h</var> mediante el algoritmo extendido de Euclides.</p>
</div>
<h2><button>Factorización de polinomios enteros</button></h2>
<div class="panel">
<p>Podemos usar la salida de la sección anterior para factorizar polinomios enteros.</p>
<p>Primero debemos dividir el polinomio por su contenido (el máximo común divisor de todos los coeficientes con el signo del coeficiente principal). El resultado es la parte principal, cuya notación es pp(<var>f</var>).</p>
<p>Para separar los factores repetidos, podemos factorizar recursivamente mcd(<var>f</var>, <var>f'</var>) y <var>f</var>/mcd(<var>f</var>, <var>f'</var>).</p>
<p>En este momento sabemos que no hay factores repetidos. Debemos hallar un número primo pequeño <var>p</var> para el que ese polinomio no tenga factores repetidos. Este número primo se puede encontar fácilmente verificando que mcd(<var>f</var>, <var>f'</var>) &equiv; 1 (mod <var>p</var>).</p>
<p>Luego debemos hallar una cota para los coeficientes de los factores. Podemos calcular la cota de Knuth-Cohen para los coeficientes de los polinomios factores de la siguiente manera:</p>
<p>Si el polinomio <var>G</var> divide <var>F</var> tenemos para todo <var>j</var>:</p>
<p>|<var>G</var><sub><var>j</var></sub>| &le; binomial(<var>n</var> &minus; 1, j)*(&Sigma;<sub><var>i</var></sub> |<var>F</var><sub><var>i</var></sub>|<sup>2</sup>)<sup>1/2</sup> + binomial(<var>n</var> &minus; 1, <var>j</var> &minus;1) * |<var>F</var><sub><var>m</var></sub>|</p>
<p>donde <var>m</var> es el grado de <var>F</var> y <var>n</var> es el grado de <var>G</var>. El máximo grado a considerar es <var>n</var> = ceil(<var>m</var>/2).</p>
<p>Una vez hallada la cota <var>B</var>,debemos calcular el menor valor de <var>e</var> tal que 2&#8290;B &lt; <var>p</var><sup>e</sup>.</p>
<p>Ahora factorizamos el polinomio mod <var>p</var><sup>e</sup> que tiene <var>r</var> factores diferentes. Si <var>r</var> &gt; 10, podemos probar otros valores de <var>p</var>, así minimizamos la cantidad de factores encontrados. La aplicación hace el intento con hasta 5 primos diferentes.</p>
<p>Ahora combinaremos los factores encontrados módulo <var>p</var><sup>e</sup> para obtener los factores que sean polinomios enteros. Hay 2<sup>r</sup> combinaciones posibles, pero la mayoría puede ser eliminada rápidamente.</p>
<p>Sea la combinación de factores hallados <var>f</var><sub>0</sub>, <var>f</var><sub>1</sub>, ..., <var>f</var><sub>s</sub>. Calculemos <var>a</var> &equiv; cp(<var>f</var>) &#8290; ti(<var>f</var><sub>0</sub>)&#8290; ti(<var>f</var><sub>1</sub>) &#8290; ... &#8290;ti(<var>f</var><sub>s</sub>) (mod <var>p</var><sup>e</sup>) y <var>b</var> &equiv; cp(<var>f</var>) &#8290; ti(<var>f</var>) (mod <var>p</var><sup>e</sup>). En ambos casos los productos deben estar en el rango &minus;<var>p</var><sup>e</sup>/2 a <var>p</var><sup>e</sup>/2.
Si <var>a</var> no divide <var>b</var>, podemos descartar esa combinación.</p>
<p>Para las pocas combinaciones que quedan, calcularemos a &equiv; lc (<var>f</var>) &#8290; <var>f</var><sub>0</sub> &#8290; <var>f</var><sub>1</sub> &#8290; ... &#8290; <var>f</var><sub>s</sub> (mod <var>p</var><sup>e</sup>). Otra vez, los coeficientes de este polinomio deben estar en el rango &minus;<var>p</var><sup>e</sup>/2 a <var>p</var><sup>e</sup>/2.
Calculemos <var>b</var> = gcdp(<var>a</var>, cp(<var>f</var>) &#8290; <var>f</var>). Si el grado de <var>b</var> es cero, descartaremos la combinación. En caso contrario, el polinomio <var>b</var> es un factor no trivial de <var>f</var>.</p>
</div>
<h2><button>Código fuente</button></h2>
<div class="panel">
<p>
Puede bajar el código fuente del programa actual y del viejo applet de factorización de polinomios <a href="https://github.com/alpertron/calculators">GitHub</a>. El código fuente está escrito en lenguaje C, por lo que es necesario <a href="https://kripken.github.io/emscripten-site/docs/getting_started/downloads.html">Emscripten</a> para generar Javascript.
</p>
</div>
<p>Escrito por Dario Alpern. Actualizado el 14 de noviembre de 2019.</p>
</div>
<div id="result" aria-live="polite" class="pad"></div>
<div>
<p class="pad">Si encuentra algún error o tiene algún comentario, por favor llene el <a href="#" id="formlink">formulario</a>.</p>
</div>
</article>
</main>
<aside id="feedback">
<h1>Formulario de comentarios</h1>
<form class="applet" id="formfeedback">
<input type="hidden" name="subject" value="Comentario de calculadora de factorización de polinomios" />
<div id="formleft">
<div class="labels"><label for="name">Nombre:</label><input class="inputfbck" type="text" name="Nombre" maxlength="40" id="name" autocomplete="name"/></div>
<div class="labels"><label for="age">Edad:</label><input class="inputfbck" type="number" name="Edad" min="0" max="999" id="age"/></div>
<div class="labels"><label for="city">Ciudad:</label><input class="inputfbck" type="text" name="Ciudad" maxlength="70" id="city" autocomplete="address-level2"/></div>
<div class="labels"><label for="province">Provincia:</label><input class="inputfbck" type="text" name="Provincia" maxlength="70" id="province" autocomplete="address-level1"/></div>
<div class="labels"><label for="country">País:</label><input class="inputfbck" type="text" name="Pais" maxlength="70" id="country" autocomplete="country-name" /></div>
<div class="labels"><label for="reply">Su e-mail:</label><input class="inputfbck" type="email" name="Responder" maxlength="70" id="reply" autocomplete="email" /></div>
<p>Ingrese su dirección de correo electrónico si desea una respuesta del autor de esta aplicación.</p>
<p><input type="checkbox" id="adduserdata"><label for="adduserdata">Enviar polinomio a factorizar</label></p>
<input type="hidden" name="datos" value="" id="userdata" />
</div>
<div id="formright">
<label for="comments">Por favor, ingrese sus comentarios o sugerencias:</label><br />
<textarea name="Comentarios" rows="7" cols="40" id="comments"></textarea>
<p><label for="how">¿Cómo encontró mi pagina?</label><br />
<select name="Como" title="¿Cómo encontró mi pagina?" id="how">
<option value="Elija respuesta">Elija respuesta</option>
<option value="Por un buscador">Por un buscador</option>
<option value="Por un amigo">Por un amigo</option>
<option value="Por un enlace">Por un enlace</option>
<option value="De Wikipedia">De Wikipedia u otra referencia</option>
<option value="Otros">Otros</option>
</select></p>
<fieldset><legend>¿Son instructivos los programas?</legend>
<input type="radio" name="Instructivo" value="Si" id="insyes" /><label for="insyes">Sí</label>
<input type="radio" name="Instructivo" value="No" id="insno" /><label for="insno">No</label>
</fieldset>
<fieldset><legend>¿Son interesantes los programas?</legend>
<input type="radio" name="Interesante" value="Si" id="intyes" /><label for="intyes">Sí</label>
<input type="radio" name="Interesante" value="No" id="intno" /><label for="intno">No</label>
</fieldset>
<p><input type="submit" value="Enviar el comentario" id="formsend" />
<input type="reset" value="Entrar otra vez" />
<input type="button" value="Cancelar" id="formcancel" /></p>
</div>
<div class="lf"></div>
</form>
</aside>
<script>
<!--
(function(){function a(a){return document.getElementById(a)}function m(d){e||(k?f||(f=new Blob([new Uint8Array(h)])):f||(f=new Blob(Array.prototype.map.call(document.querySelectorAll("script[type='text/js-worker']"),function(a){return a.textContent}),{type:"text/javascript"})),e=new Worker(window.URL.createObjectURL(f)),e.onmessage=function(b){a("result").innerHTML=b.data.substring(1);"2"==b.data.substring(0,1)&&(a("eval").disabled=!1,a("factor").disabled=!1,a("stop").disabled=!0)});k?e.postMessage(d):
e.postMessage([d,h])}function n(d){d=1+d+(a("sup").checked?4:0);var b=a("result"),c=a("poly").value,p=a("mod").value,e=a("digits").value;a("help").style.display="none";b.style.display="block";""==c?b.innerHTML="Por favor ingrese una expresi\u00f3n para el polinomio a evaluar.":""==p?b.innerHTML="Por favor ingrese un n\u00famero o expresi\u00f3n para el m\u00f3dulo.":(a("eval").disabled=!0,a("factor").disabled=!0,a("stop").disabled=!1,b.innerHTML="Factorizando el polinomio...",param=e+","+d+","+p+
String.fromCharCode(0)+c+String.fromCharCode(0),h?m(param):l=param)}function q(){a("main").style.display="block";a("feedback").style.display="none";a("poly").focus()}var e=0,f,l,h=0,k="undefined"===typeof WebAssembly;window.onload=function(){a("stop").disabled=!0;a("eval").onclick=function(){n(2)};a("factor").onclick=function(){n(0)};a("stop").onclick=function(){e.terminate();e=0;a("eval").disabled=!1;a("factor").disabled=!1;a("stop").disabled=!0;a("result").innerHTML="<p>Factorizaci\u00f3n detenida por el usuario.</p>"};
a("helpbtn").onclick=function(){a("help").style.display="block";a("result").style.display="none"};a("poly").oninput=function(){var c=a("poly"),b=c.value.length-c.selectionStart;c.value=c.value.replace(".","x^");setTimeout(function(){b=c.value.length-b;c.selectionStart=b;c.selectionEnd=b},30)};a("formlink").onclick=function(){a("main").style.display="none";a("feedback").style.display="block";a("formfeedback").reset();a("name").focus();return!1};a("formcancel").onclick=function(){q()};a("formsend").onclick=
function(){a("userdata").value=a("adduserdata").checked?a("poly").value+" (mod "+a("mod").value+")":"";var c=new XMLHttpRequest;c.onreadystatechange=function(){4==c.readyState&&(200==c.status?alert("Comentarios enviados satisfactoriamente."):alert("No se pudieron enviar los comentarios."),q())};c.open("POST","/enviomail.php",!0);c.setRequestHeader("Content-type","application/x-www-form-urlencoded");for(var b=a("formfeedback").elements,d="",e=0,g=0;g<b.length;g++){var f=b[g];"radio"==f.type&&0==f.checked||
!f.name||(e&&(d+="&"),d+=f.name+"="+encodeURIComponent(f.value),e++)}c.send(d);return!1};var d=document.querySelectorAll("h2"),b;for(b=0;b<d.length;b++)d[b].addEventListener("click",function(){this.children[0].classList.toggle("active");var a=this.nextElementSibling;a.style.display="block"===a.style.display?"none":"block"});"serviceWorker"in navigator&&navigator.serviceWorker.register("calcSW.js").then(function(){},function(){})};var g=new XMLHttpRequest;g.open("GET",k?"polfactW0023.js":"polfact0023.wasm",
!0);g.responseType="arraybuffer";g.onreadystatechange=function(){4==g.readyState&&200==g.status&&(h=g.response,l&&m(l))};g.send(null)})(this);
//-->
</script>
<script type="text/js-worker">
var e,f,k,n={env:{databack:function(b){self.postMessage(l(b))},tenths:function(){return Math.floor((new Date).getTime()/100)},getCunn:function(b){var a=new XMLHttpRequest;a.open("GET","https://www.alpertron.com.ar/"+l(b),!1);a.send(null);200==a.status&&m(e.getFactorsAsciiPtr(),a.responseText)}}};
self.onmessage=function(b){k?(m(e.getInputStringPtr(),b.data[0]),e.doWork()):WebAssembly.instantiate(b.data[1],n).then(function(a){k=1;e=a.instance.exports;f=new Uint8Array(e.memory.buffer);m(e.getInputStringPtr(),b.data[0]);e.doWork()})};function l(b){var a=-1,c=0,g="",d="";do{for(c=0;1024>c;c++){a=f[b++>>0];if(0==a)break;128<=a&&(a=(a-192<<6)+f[b++>>0]-128);g+=String.fromCharCode(a)}d+=g;g=""}while(0!=a);return d+g}
function m(b,a){var c=b,g=a.length,d,h;for(d=0;d<g;d++)h=a.charCodeAt(d),128>h?f[c++]=h:(f[c++]=(h>>6)+192,f[c++]=(h&63)+128);f[c]=0};
</script>
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebApplication",
  "browserRequirements": "Requires HTML5. Requires Javascript.",
  "name": "Calculadora de factorización de polinomios",
  "description": "Aplicación Javascript que factoriza polinomios enteros y módulo una potencia de número primo.",
  "operatingSystem": "Any",
  "applicationCategory": "https://schema.org/EducationalApplication",
  "author": {
    "@type": "Person",
    "name": "Dario Alpern"
  },
  "inLanguage": "es",
  "license": "https://www.gnu.org/licenses/gpl-3.0.en.html",
  "offers": {
    "@type": "Offer",
    "price": "0.00",
    "priceCurrency": "USD"
  }
}
</script>
</body>
</html>
